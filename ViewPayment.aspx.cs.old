using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using Baldrich.DBRequest;
using EPolicy.TaskControl;

namespace EPolicy
{
    /// <summary>
    /// Summary description for ViewPayment.
    /// </summary>
    public partial class ViewPayment : System.Web.UI.Page
    {
        private Control LeftMenu;
        private DataTable DtTask;

        #region Web Form Designer generated code
        override protected void OnInit(EventArgs e)
        {
            //
            // CODEGEN: This call is required by the ASP.NET Web Form Designer.
            //
            InitializeComponent();
            base.OnInit(e);

            Control Banner = new Control();
            Banner = LoadControl(@"TopBanner.ascx");
            this.Placeholder1.Controls.Add(Banner);

            //Setup Left-side Banner

            LeftMenu = new Control();
            LeftMenu = LoadControl(@"LeftMenu.ascx");
            phTopBanner1.Controls.Add(LeftMenu);
        }

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.searchIndividual.ItemCommand += new System.Web.UI.WebControls.DataGridCommandEventHandler(this.searchIndividual_ItemCommand);
            this.searchIndividual.ItemDataBound += new System.Web.UI.WebControls.DataGridItemEventHandler(this.searchIndividual_ItemDataBound);

        }
        #endregion

        protected void Page_Load(object sender, System.EventArgs e)
        {
            Login.Login cp = HttpContext.Current.User as Login.Login;
            if (cp == null)
            {
                Response.Redirect("HomePage.aspx?001");
            }
            else
            {
                if (!cp.IsInRole("VIEWPAYMENT") && !cp.IsInRole("ADMINISTRATOR"))
                {
                    Response.Redirect("HomePage.aspx?001");
                }
            }

            if (!IsPostBack)
            {
                this.SetReferringPage();

                TaskControl.Policy taskControl;
                if (Session["TaskControlPayment"] != null)
                {
                    taskControl = (TaskControl.Policy)Session["TaskControlPayment"];
                }
                else
                {
                    taskControl = (TaskControl.Policy)Session["TaskControl"];
                    Session.Add("TaskControlPayment", taskControl);
                }

                LblCustomerName.Text = "Policy No.: " + taskControl.PolicyType.Trim() + " " + taskControl.PolicyNo.Trim() + " " + taskControl.Certificate.Trim() + " " + taskControl.Suffix.Trim();

                FillDataGrid();
                FillTextControl();
            }
            this.litPopUp.Visible = false;
        }

        private void FillTextControl()
        {
            TaskControl.Policy taskControl = (TaskControl.Policy)Session["TaskControlPayment"];

            TxtTotalPremium.Enabled = false;
            TxtTotalPaid.Enabled = false;
            TxtBalance.Enabled = false;

            TxtTotalPremium.Text = taskControl.TotalPremium.ToString("###,###.00");
            TxtTotalPaid.Text = taskControl.PaymentsDetail.TotalPaid.ToString("###,###.00");
            TxtBalance.Text = taskControl.PaymentsDetail.Balance.ToString("###,###.00");

            if (taskControl.CancellationMethod == 3)
            {
                TxtTotalPaid.Text = taskControl.TotalPremium.ToString("###,###.00");
                TxtBalance.Text = "0.00";
            }
        }

        private void FillDataGrid()
        {
            TaskControl.Policy taskControl = (TaskControl.Policy)Session["TaskControlPayment"];

            LblError.Visible = false;
            searchIndividual.DataSource = null;
            DtTask = null;

            taskControl.PaymentsDetail = PaymentPolicy.GetPaymentsByTaskControlID(taskControl);

            DtTask = taskControl.PaymentsDetail.PaymentsCollection;
            DataRow DtTaskRow = DtTask.NewRow();

            if (taskControl.CancellationMethod == 3)
            {
                DtTaskRow["PartialPaymentID"] = 0;
                DtTaskRow["TaskControlID"] = taskControl.TaskControlID;
                DtTaskRow["PolicyID"] = 0;
                DtTaskRow["PaymentDate"] = taskControl.CancellationDate.ToString().Trim();
                DtTaskRow["CheckNumber"] = "Cancel(F)";
                DtTaskRow["CreditDebitDesc"] = "CREDIT";
                DtTaskRow["TransactionDate"] = taskControl.CancellationDate.ToString().Trim();
                DtTaskRow["DepositDate"] = "";
                DtTaskRow["Name"] = "";
                DtTaskRow["TransactionAmount"] = taskControl.TotalPremium.ToString("###,###.00");

                DtTask.Rows.Add(DtTaskRow);
            }

            Session.Remove("DtTask");
            Session.Add("DtTask", DtTask);

            //Se actualiza session.
            Session["TaskControl"] = taskControl;

            if (DtTask.Rows.Count != 0)
            {
                searchIndividual.DataSource = DtTask;
                searchIndividual.DataBind();
                string test = searchIndividual.Items[0].Cells[6].Text.Trim();
            }
            else
            {
                searchIndividual.DataSource = null;
                searchIndividual.DataBind();

                //LblError.Visible = true;
                LblError.Text = "Could not find a match for your search criteria, please try again.";
            }

            LblTotalCases.Text = "Total Cases: " + DtTask.Rows.Count.ToString();
        }

        private string ReferringPage
        {
            get
            {
                return ((ViewState["referringPage"] != null) ?
                    ViewState["referringPage"].ToString() : "");
            }
            set
            {
                ViewState["referringPage"] = value;
            }
        }

        private void SetReferringPage()
        {
            if ((Session["FromPage"] != null) && (Session["FromPage"].ToString() != ""))
            {
                this.ReferringPage = Session["FromPage"].ToString();
                Session.Remove("FromPage");
            }
        }

        private void ReturnToReferringPage()
        {
            if (this.ReferringPage != "")
            {
                Response.Redirect(this.ReferringPage);
            }
            Response.Redirect("HomePage.aspx");
        }

        private void btnClose_Click(object sender, System.Web.UI.ImageClickEventArgs e)
        {
            Session.Remove("TaskControlPayment");
            ReturnToReferringPage();
        }

        private void searchIndividual_ItemDataBound(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)
        {
            TaskControl.Policy taskControl = (TaskControl.Policy)Session["TaskControlPayment"];
            DataTable dtCol = taskControl.PaymentsDetail.PaymentsCollection;

            DataColumnCollection dc = dtCol.Columns;

            if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
            {
                DateTime PaymentDateField;
                DateTime EntryDateField;
                DateTime DepositDateField;

                if (DataBinder.Eval(e.Item.DataItem, "PaymentDate") != "")
                {
                    PaymentDateField = Convert.ToDateTime(DataBinder.Eval(e.Item.DataItem, "PaymentDate", "{0:MM/dd/yyyy}"));
                    e.Item.Cells[5].Text = PaymentDateField.ToShortDateString();
                }

                if (DataBinder.Eval(e.Item.DataItem, "TransactionDate") != "")
                {
                    EntryDateField = Convert.ToDateTime(DataBinder.Eval(e.Item.DataItem, "TransactionDate", "{0:MM/dd/yyyy}"));
                    e.Item.Cells[4].Text = EntryDateField.ToShortDateString();
                }

                if (DataBinder.Eval(e.Item.DataItem, "DepositDate") != "")
                {
                    DepositDateField = Convert.ToDateTime(DataBinder.Eval(e.Item.DataItem, "DepositDate", "{0:MM/dd/yyyy}"));
                    e.Item.Cells[7].Text = DepositDateField.ToShortDateString();
                }
            }
        }

        protected void BtnExit_Click(object sender, System.EventArgs e)
        {
            Session.Remove("TaskControlPayment");
            ReturnToReferringPage();
        }

        private void searchIndividual_ItemCommand(object source, System.Web.UI.WebControls.DataGridCommandEventArgs e)
        {
            //try
            //{
            //    if(e.CommandName.ToString() == "Delete") // Select
            //    {

            //        TaskControl.Policy taskControl = (TaskControl.Policy) Session["TaskControlPayment"];
            //        int i = int.Parse(e.Item.Cells[1].Text);

            //        PaymentPolicy.DeletePartialPayment(i);

            //        //El pago credito debe de actualizar el paid amount de Policy.
            //        if (e.Item.Cells[6].Text.Trim() == "CREDIT")
            //        {
            //            string pa = e.Item.Cells[7].Text.Substring(1,e.Item.Cells[7].Text.Length-1);
            //            double paidAmt = 0.00;
            //            if (taskControl.PaidAmount <= double.Parse(pa)) // Debit
            //            {
            //                paidAmt = 0.00;
            //            }
            //            else
            //            {
            //                //paidAmt = taskControl.PaidAmount - double.Parse(pa);
            //                paidAmt = double.Parse(TxtTotalPaid.Text) - double.Parse(pa);
            //            }
            //            PaymentPolicy.UpdatePolicyPaidAmount(taskControl.TaskControlID,paidAmt);
            //        }

            //        Session.Remove("DtTask");

            //        FillDataGrid();
            //        FillTextControl();					
            //    }
            //}
            //catch (Exception exp)
            //{
            //    this.litPopUp.Text = Utilities.MakeLiteralPopUpString("Can not save the information. " + exp.Message);
            //    this.litPopUp.Visible = true;
            //}
        }
        protected void btnApply_Click(object sender, EventArgs e)
        {
            TaskControl.Policy taskControl = (TaskControl.Policy)Session["TaskControlPayment"];

            string[] policyInfo = new string[13];
            policyInfo[0] = taskControl.PolicyType.ToString();
            policyInfo[1] = taskControl.PolicyNo.ToString();
            policyInfo[2] = taskControl.Certificate.ToString();
            policyInfo[3] = taskControl.Suffix.ToString();
            policyInfo[4] = taskControl.Customer.CustomerNo.ToString();
            policyInfo[5] = taskControl.Customer.FirstName.ToString();
            policyInfo[6] = taskControl.Customer.LastName1.ToString();
            policyInfo[7] = taskControl.Customer.LastName2.ToString();
            policyInfo[8] = taskControl.LoanNo.ToString();
            policyInfo[9] = taskControl.Bank.ToString();
            policyInfo[10] = taskControl.PolicyClassID.ToString();
            double prem = taskControl.TotalPremium + taskControl.Charge;
            policyInfo[11] = prem.ToString();
            policyInfo[12] = taskControl.TaskControlID.ToString();

            Session.Clear();

            EPolicy.TaskControl.TaskControl task;
            EPolicy.TaskControl.Payments pay = new EPolicy.TaskControl.Payments();
            task = (TaskControl.TaskControl)pay;
            task.Mode = 1; //ADD
            Session["TaskControl"] = task;

            Session.Add("PolicyInfo", policyInfo);
            Response.Redirect("Payments.aspx");
        }
        protected void searchIndividual_ItemCommand1(object source, DataGridCommandEventArgs e)
        {
            try
            {
                if (e.CommandName.ToString() == "Delete") // Select
                {

                    TaskControl.Policy taskControl = (TaskControl.Policy)Session["TaskControlPayment"];

                    if (e.Item.Cells[1].Text.Trim() == "Cancel(F)")
                    {
                        this.litPopUp.Text = EPolicy.Utilities.MakeLiteralPopUpString("Unable to delete selected payment as it was created for being Cancelled/Flat");
                        this.litPopUp.Visible = true;
                        return;
                    }

                    int i = int.Parse(e.Item.Cells[1].Text);

                    PaymentPolicy.DeletePartialPayment(i);

                    //El pago credito debe de actualizar el paid amount de Policy.
                    //if (e.Item.Cells[6].Text.Trim() == "CREDIT")
                    //{
                    //string pa = e.Item.Cells[9].Text.Substring(1, e.Item.Cells[9].Text.Length - 1);
                    //double paidAmt = 0.00;
                    //if (taskControl.PaidAmount <= double.Parse(pa)) // Debit
                    //{
                    //    paidAmt = 0.00;
                    //}
                    //else
                    //{
                    //    //paidAmt = taskControl.PaidAmount - double.Parse(pa);
                    //    paidAmt = double.Parse(TxtTotalPaid.Text) - double.Parse(pa);
                    //}
                    //PaymentPolicy.UpdatePolicyPaidAmount(taskControl.TaskControlID, paidAmt);

                    EPolicy.TaskControl.TaskControl taskControlpol = EPolicy.TaskControl.TaskControl.GetTaskControlByTaskControlID(taskControl.TaskControlID, 1);
                    EPolicy.TaskControl.Policy pol = (EPolicy.TaskControl.Policy)taskControlpol;
                    EPolicy.TaskControl.PaymentPolicy pp = EPolicy.TaskControl.PaymentPolicy.GetPaymentsByTaskControlID(pol);

                    string paidAmtST = pp.TotalPaid.ToString("###,###.00");
                    double paidAmt = double.Parse(paidAmtST);
                    EPolicy.TaskControl.PaymentPolicy.UpdatePolicyPaidAmount(pol.TaskControlID, paidAmt);
                    //}

                    Session.Remove("DtTask");

                    FillDataGrid();
                    FillTextControl();
                }
                else //Edit
                {
                    TaskControl.Policy taskControl = (TaskControl.Policy)Session["TaskControlPayment"];

                    if (e.Item.Cells[1].Text.Trim() == "Cancel(F)")
                    {
                        this.litPopUp.Text = EPolicy.Utilities.MakeLiteralPopUpString("Unable to edit selected payment as it was created for being Cancelled/Flat");
                        this.litPopUp.Visible = true;
                        return;
                    }

                    string[] policyInfo = new string[13];
                    policyInfo[0] = taskControl.PolicyType.ToString();
                    policyInfo[1] = taskControl.PolicyNo.ToString();
                    policyInfo[2] = taskControl.Certificate.ToString();
                    policyInfo[3] = taskControl.Suffix.ToString();
                    policyInfo[4] = taskControl.Customer.CustomerNo.ToString();
                    policyInfo[5] = taskControl.Customer.FirstName.ToString();
                    policyInfo[6] = taskControl.Customer.LastName1.ToString();
                    policyInfo[7] = taskControl.Customer.LastName2.ToString();
                    policyInfo[8] = taskControl.LoanNo.ToString();
                    policyInfo[9] = taskControl.Bank.ToString();
                    policyInfo[10] = taskControl.PolicyClassID.ToString();
                    double prem = taskControl.TotalPremium + taskControl.Charge;
                    policyInfo[11] = prem.ToString();
                    policyInfo[12] = taskControl.TaskControlID.ToString();

                    Session.Clear();

                    EPolicy.TaskControl.TaskControl task;
                    EPolicy.TaskControl.Payments pay = new EPolicy.TaskControl.Payments();
                    task = (TaskControl.TaskControl)pay;
                    task.Mode = 2; //UPDATE
                    Session["TaskControl"] = task;

                    Session.Add("PolicyInfo", policyInfo);
                    string js = "<script language=javascript> javascript:popwindow=window.open('Payments.aspx','popwindow','toolbar=no,location=center,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,copyhistory=no,width=1010,height=610');popwindow.focus();</script>";

                    //string js = "<script language=javascript> javascript:window.opener.location.href = Payments.aspx; window.opener.location.reload(true); </script>";
                    //Session.Clear();
                    //Session["TaskControl"] = taskControl;
                    //Response.Redirect("Policies.aspx?" + taskControl.TaskControlID, true);

                    Response.Write(js);

                }
            }
            catch (Exception exp)
            {
                this.litPopUp.Text = Utilities.MakeLiteralPopUpString("Can not save the information. " + exp.Message);
                this.litPopUp.Visible = true;
            }
        }
    }
}
